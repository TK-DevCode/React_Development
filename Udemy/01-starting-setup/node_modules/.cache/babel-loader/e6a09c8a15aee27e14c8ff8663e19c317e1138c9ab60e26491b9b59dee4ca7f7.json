{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiaan.kemp\\\\Documents\\\\Tiaan\\\\Personal\\\\Software Development\\\\Web Development\\\\Repository\\\\React_Development\\\\Udemy\\\\01-starting-setup\\\\src\\\\Components\\\\NewExpense\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseForm() {\n  _s();\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  function titleChangeHandler(event) {\n    setEnteredTitle(event.target.value);\n    // Every time the onChange Event is triggered the current entered value is stored in enteredTitle,\n    //through the state fuction\n  }\n\n  function amountChangeHandler(event) {\n    setEnteredAmount(event.target.value);\n    //value returned by event.target.value will always be a string\n  }\n\n  function dateChangeHandler(event) {\n    setEnteredDate(event.target.value);\n  }\n  function submitHandler(event) {\n    event.preventDefault(); // By default a button placed inside a form will act as a submit button and reload the browser\n    // By page will reload because of a request being sent to the sever to submit the form\n    // But we don't want that, we want to control the submit with JavaScript\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date()\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2018-01-01\",\n          max: \"2023-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ExpenseForm, \"cQceuCgozgRBnFcek1NBqBcFFts=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date"],"sources":["C:/Users/tiaan.kemp/Documents/Tiaan/Personal/Software Development/Web Development/Repository/React_Development/Udemy/01-starting-setup/src/Components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nfunction ExpenseForm() {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  function titleChangeHandler(event) {\r\n    setEnteredTitle(event.target.value);\r\n    // Every time the onChange Event is triggered the current entered value is stored in enteredTitle,\r\n    //through the state fuction\r\n  }\r\n  function amountChangeHandler(event) {\r\n    setEnteredAmount(event.target.value);\r\n    //value returned by event.target.value will always be a string\r\n  }\r\n  function dateChangeHandler(event) {\r\n    setEnteredDate(event.target.value);\r\n  }\r\n\r\n  function submitHandler(event){\r\n    event.preventDefault();// By default a button placed inside a form will act as a submit button and reload the browser\r\n    // By page will reload because of a request being sent to the sever to submit the form\r\n    // But we don't want that, we want to control the submit with JavaScript\r\n\r\n    const expenseData = {\r\n        title: enteredTitle,\r\n        amount: enteredAmount,\r\n        date: new Date\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2018-01-01\"\r\n            max=\"2023-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAAC;AAE3B,SAASC,WAAW,GAAG;EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElD,SAASQ,kBAAkB,CAACC,KAAK,EAAE;IACjCN,eAAe,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACnC;IACA;EACF;;EACA,SAASC,mBAAmB,CAACH,KAAK,EAAE;IAClCJ,gBAAgB,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACpC;EACF;;EACA,SAASE,iBAAiB,CAACJ,KAAK,EAAE;IAChCF,cAAc,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC;EAEA,SAASG,aAAa,CAACL,KAAK,EAAC;IAC3BA,KAAK,CAACM,cAAc,EAAE,CAAC;IACvB;IACA;;IAEA,MAAMC,WAAW,GAAG;MAChBC,KAAK,EAAEf,YAAY;MACnBgB,MAAM,EAAEd,aAAa;MACrBe,IAAI,EAAE,IAAIC,IAAI;IAClB,CAAC;EACH;EAEA,oBACE;IAAM,QAAQ,EAAEN,aAAc;IAAA,wBAC5B;MAAK,SAAS,EAAC,uBAAuB;MAAA,wBACpC;QAAK,SAAS,EAAC,sBAAsB;QAAA,wBACnC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB,eACpB;UAAO,IAAI,EAAC,MAAM;UAAC,QAAQ,EAAEN;QAAmB;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/C,eACN;QAAK,SAAS,EAAC,sBAAsB;QAAA,wBACnC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAqB,eACrB;UACE,IAAI,EAAC,QAAQ;UACb,GAAG,EAAC,MAAM;UACV,IAAI,EAAC,MAAM;UACX,QAAQ,EAAEI;QAAoB;UAAA;UAAA;UAAA;QAAA,QAC9B;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAK,SAAS,EAAC,sBAAsB;QAAA,wBACnC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAmB,eACnB;UACE,IAAI,EAAC,MAAM;UACX,GAAG,EAAC,YAAY;UAChB,GAAG,EAAC,YAAY;UAChB,QAAQ,EAAEC;QAAkB;UAAA;UAAA;UAAA;QAAA,QAC5B;MAAA;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,SAAS,EAAC,sBAAsB;MAAA,uBACnC;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAqB;MAAA;MAAA;MAAA;IAAA,QACtC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX;AAAC,GA7DQZ,WAAW;AAAA,KAAXA,WAAW;AA+DpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}