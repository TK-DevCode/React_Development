{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiaan.kemp\\\\Documents\\\\Tiaan\\\\Personal\\\\Software Development\\\\Web Development\\\\Repository\\\\React_Development\\\\Udemy\\\\01-starting-setup\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Expenses from \"./Components/Expenses/Expenses\";\nimport NewExpense from \"./Components/NewExpense/NewExpense\";\n\n//Array Off expense object(key value pair)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dummy_expenses = [{\n  date: new Date(2022, 10, 17),\n  title: \"Car Insurance\",\n  amount: 458.96\n}, {\n  date: new Date(2022, 10, 16),\n  title: \"Food\",\n  amount: 1858.96\n}, {\n  date: new Date(2022, 10, 15),\n  title: \"Rent\",\n  amount: 590.96\n}, {\n  date: new Date(2022, 10, 14),\n  title: \"Gym\",\n  amount: 128.96\n}];\nfunction App() {\n  _s();\n  const [expenses, setExpenses] = useState(Dummy_expenses);\n  function addExpenseHandler(expense) {\n    //the new expense get passed in from the onAddExpense function in NewExpense\n\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    }); // Here we use a special function. In stead of passing in the new array [expense, ...expenses] as an arugment\n    // We pass in a fuction instead so that setExpense automatically recieve the latest state snapshot \n    // We get all our previous epenses and then return a new array with the old list of \n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      expense_array: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vB+c3+NMDTouXGbYay4vXgTqJh4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Expenses","NewExpense","Dummy_expenses","date","Date","title","amount","App","expenses","setExpenses","addExpenseHandler","expense","prevExpenses"],"sources":["C:/Users/tiaan.kemp/Documents/Tiaan/Personal/Software Development/Web Development/Repository/React_Development/Udemy/01-starting-setup/src/App.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport Expenses from \"./Components/Expenses/Expenses\";\nimport NewExpense from \"./Components/NewExpense/NewExpense\";\n\n//Array Off expense object(key value pair)\nconst Dummy_expenses = [\n  {\n    date: new Date(2022, 10, 17),\n    title: \"Car Insurance\",\n    amount: 458.96,\n  },\n  {\n    date: new Date(2022, 10, 16),\n    title: \"Food\",\n    amount: 1858.96,\n  },\n  {\n    date: new Date(2022, 10, 15),\n    title: \"Rent\",\n    amount: 590.96,\n  },\n  {\n    date: new Date(2022, 10, 14),\n    title: \"Gym\",\n    amount: 128.96,\n  },\n];\n\nfunction App() {\n\n  const [expenses, setExpenses] = useState(Dummy_expenses);\n  \n  function addExpenseHandler(expense){ //the new expense get passed in from the onAddExpense function in NewExpense\n    \n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses]\n    });// Here we use a special function. In stead of passing in the new array [expense, ...expenses] as an arugment\n    // We pass in a fuction instead so that setExpense automatically recieve the latest state snapshot \n    // We get all our previous epenses and then return a new array with the old list of \n\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense = {addExpenseHandler}/>\n      <Expenses\n        expense_array={expenses}/>      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,UAAU,MAAM,oCAAoC;;AAE3D;AAAA;AACA,MAAMC,cAAc,GAAG,CACrB;EACEC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;EAC5BC,KAAK,EAAE,eAAe;EACtBC,MAAM,EAAE;AACV,CAAC,EACD;EACEH,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;EAC5BC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC,EACD;EACEH,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;EAC5BC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC,EACD;EACEH,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;EAC5BC,KAAK,EAAE,KAAK;EACZC,MAAM,EAAE;AACV,CAAC,CACF;AAED,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACG,cAAc,CAAC;EAExD,SAASQ,iBAAiB,CAACC,OAAO,EAAC;IAAE;;IAEnCF,WAAW,CAACG,YAAY,IAAI;MAC1B,OAAO,CAACD,OAAO,EAAE,GAAGC,YAAY,CAAC;IACnC,CAAC,CAAC,CAAC;IACH;IACA;EAEF;;EAAC;EAED,oBACE;IAAA,wBACE,QAAC,UAAU;MAAC,YAAY,EAAIF;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAE,eAChD,QAAC,QAAQ;MACP,aAAa,EAAEF;IAAS;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACxB;AAEV;AAAC,GArBQD,GAAG;AAAA,KAAHA,GAAG;AAuBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}