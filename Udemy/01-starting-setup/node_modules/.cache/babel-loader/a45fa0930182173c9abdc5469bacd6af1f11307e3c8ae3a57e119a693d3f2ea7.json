{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiaan.kemp\\\\Documents\\\\Tiaan\\\\Personal\\\\Software Development\\\\Web Development\\\\Repository\\\\React_Development\\\\Udemy\\\\01-starting-setup\\\\src\\\\Components\\\\Expenses\\\\ExpenseItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseItem(props) {\n  _s();\n  // use Hooks can only be called in React components non normal JS\n  // Hooks are used to re-evaluate the data when an onCli\n  // With the useState you create a special kind of variable. useState gets passed the initial value as a argument\n  // useState returns 2 things for us: 1. Gives us access to this special variable\n  // 2. Returns a function that we can call to assign a new value to the variable\n  // Summary: useState returns an Array = [value itself, updating function]\n\n  // You can use destucturing to store both returned elements into seperate variables/constants\n\n  const [title, setNewTitle] = useState(props.title);\n  function clickHandler() {\n    setNewTitle(\"Updated!\");\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"$\", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"Change title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(ExpenseItem, \"aVRxGjXkxDYS5EyfyA8kcuzEIa4=\");\n_c = ExpenseItem;\nexport default ExpenseItem;\nvar _c;\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["React","useState","ExpenseDate","Card","ExpenseItem","props","title","setNewTitle","clickHandler","date","amount"],"sources":["C:/Users/tiaan.kemp/Documents/Tiaan/Personal/Software Development/Web Development/Repository/React_Development/Udemy/01-starting-setup/src/Components/Expenses/ExpenseItem.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\"\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n  // use Hooks can only be called in React components non normal JS\r\n  // Hooks are used to re-evaluate the data when an onCli\r\n  // With the useState you create a special kind of variable. useState gets passed the initial value as a argument\r\n  // useState returns 2 things for us: 1. Gives us access to this special variable\r\n  // 2. Returns a function that we can call to assign a new value to the variable\r\n  // Summary: useState returns an Array = [value itself, updating function]\r\n\r\n  // You can use destucturing to store both returned elements into seperate variables/constants\r\n  \r\n  const [title, setNewTitle] = useState(props.title);\r\n\r\n  function clickHandler(){\r\n    setNewTitle(\"Updated!\");\r\n  };\r\n\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date}/>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n      <button onClick={clickHandler}>Change title</button>\r\n    </Card>\r\n  );\r\n\r\n}\r\n\r\nexport default ExpenseItem;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,mBAAmB;AAAC;AAE3B,SAASC,WAAW,CAACC,KAAK,EAAE;EAAA;EAC1B;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,MAAM,CAACC,KAAK,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAACI,KAAK,CAACC,KAAK,CAAC;EAElD,SAASE,YAAY,GAAE;IACrBD,WAAW,CAAC,UAAU,CAAC;EACzB;EAAC;EAED,oBACE,QAAC,IAAI;IAAC,SAAS,EAAC,cAAc;IAAA,wBAC5B,QAAC,WAAW;MAAC,IAAI,EAAEF,KAAK,CAACI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE,eAChC;MAAK,SAAS,EAAC,2BAA2B;MAAA,wBACxC;QAAA,UAAKH;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eAChB;QAAK,SAAS,EAAC,qBAAqB;QAAA,gBAAGD,KAAK,CAACK,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACtD,eACN;MAAQ,OAAO,EAAEF,YAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/C;AAGX;AAAC,GA3BQJ,WAAW;AAAA,KAAXA,WAAW;AA6BpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}