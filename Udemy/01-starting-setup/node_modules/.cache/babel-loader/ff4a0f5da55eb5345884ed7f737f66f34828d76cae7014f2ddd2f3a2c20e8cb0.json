{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiaan.kemp\\\\Documents\\\\Tiaan\\\\Personal\\\\Software Development\\\\Web Development\\\\Repository\\\\React_Development\\\\Udemy\\\\01-starting-setup\\\\src\\\\Components\\\\Chart\\\\Chart.js\";\nimport React from \"react\";\nimport \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart() {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value); // We create a new array to exstract just the values of each expense. We use map to access each object in array and map that to a new value.  \n  const totalMaxValue = Math.max(...dataPointValues); // the spread operator (...) is used here to extract each element out of the array and add them as stand alone arguments to the max method\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoints.map(dataPoint => /*#__PURE__*/_jsxDEV(ChartBar, {\n      // Remember the key prop help to render the list properly, in this case we use the label prop to say each label will be unique for each chartBar \n      value: dataPoint.value,\n      maxValue: totalMaxValue,\n      label: dataPoint.label\n    }, dataPoint.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","ChartBar","Chart","dataPointValues","props","dataPoints","map","dataPoint","value","totalMaxValue","Math","max","label"],"sources":["C:/Users/tiaan.kemp/Documents/Tiaan/Personal/Software Development/Web Development/Repository/React_Development/Udemy/01-starting-setup/src/Components/Chart/Chart.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nfunction Chart() {\r\n\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value); // We create a new array to exstract just the values of each expense. We use map to access each object in array and map that to a new value.  \r\n    const totalMaxValue = Math.max(...dataPointValues); // the spread operator (...) is used here to extract each element out of the array and add them as stand alone arguments to the max method\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label} // Remember the key prop help to render the list properly, in this case we use the label prop to say each label will be unique for each chartBar \r\n          value={dataPoint.value}\r\n          maxValue={totalMaxValue}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,SAASC,KAAK,GAAG;EAEb,MAAMC,eAAe,GAAGC,KAAK,CAACC,UAAU,CAACC,GAAG,CAACC,SAAS,IAAIA,SAAS,CAACC,KAAK,CAAC,CAAC,CAAC;EAC5E,MAAMC,aAAa,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGR,eAAe,CAAC,CAAC,CAAC;;EAEtD,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,UACnBC,KAAK,CAACC,UAAU,CAACC,GAAG,CAAEC,SAAS,iBAC9B,QAAC,QAAQ;MACe;MACtB,KAAK,EAAEA,SAAS,CAACC,KAAM;MACvB,QAAQ,EAAEC,aAAc;MACxB,KAAK,EAAEF,SAAS,CAACK;IAAM,GAHlBL,SAAS,CAACK,KAAK;MAAA;MAAA;MAAA;IAAA,QAKvB;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,KAjBQV,KAAK;AAmBd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}